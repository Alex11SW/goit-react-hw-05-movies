{"version":3,"file":"static/js/871.689de07c.chunk.js","mappings":"sLAEA,MAGMA,E,OAAWC,EAAMC,OAAO,CAC5BC,QAHe,+BAIfC,OAAQ,CACNC,QANY,mCAOZC,SAAU,WAIDC,EAAoBA,IACxBP,EAASQ,IAAI,uBAGTC,EAAe,SAACC,GAAqB,IAAdC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EACzC,OAAOZ,EAASQ,IAAI,gBAAiB,CACnCJ,OAAQ,CAAEM,QAAOC,SAErB,EAEaI,EAAmBC,GACvBhB,EAASQ,IAAI,UAADS,OAAWD,IAEnBE,EAAmBF,GACvBhB,EAASQ,IAAI,UAADS,OAAWD,EAAO,aAE1BG,EAAmBH,GACvBhB,EAASQ,IAAI,UAADS,OAAWD,EAAO,Y,sFCzBvC,MAiDA,EAjDgBI,KACd,MAAM,QAAEJ,IAAYK,EAAAA,EAAAA,OAEbC,EAASC,IAAcC,EAAAA,EAAAA,aACvBC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MAmBnC,OAjBAK,EAAAA,EAAAA,YAAU,KACaC,WACnB,IACEJ,GAAW,GACX,MAAM,KAAEK,SAAeZ,EAAAA,EAAAA,IAAgBH,GAEvCO,EAAWQ,EAAKC,QAClB,CAAE,MAAOL,GACPC,EAASD,EAAMM,QACjB,CAAC,QACCP,GAAW,EACb,GAGFQ,EAAc,GACb,CAAClB,KAGFmB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,YAEHZ,IAAWU,EAAAA,EAAAA,KAAA,KAAAE,SAAG,eACdV,IAASW,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,UAAQV,KACpBL,GAA8B,IAAnBA,EAAQT,QAClBsB,EAAAA,EAAAA,KAAA,KAAAE,SAAG,8CAEHF,EAAAA,EAAAA,KAAA,MAAAE,SACGf,GACCA,EAAQiB,KAAKC,IACXF,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,WAASG,EAAOC,WACpBN,EAAAA,EAAAA,KAAA,KAAAE,SAAIG,EAAOE,YAFJF,EAAOG,YAQzB,C","sources":["api/postmovie.js","pages/Reviews/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_KEY = \"7fa1de4f202d6fd853924ceed0b441bf\";\r\nconst BASE_URL = \"https://api.themoviedb.org/3\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: BASE_URL,\r\n  params: {\r\n    api_key: API_KEY,\r\n    language: \"en-US\",\r\n  },\r\n});\r\n\r\nexport const getTrendingMovies = () => {\r\n  return instance.get(\"/trending/movie/day\");\r\n};\r\n\r\nexport const searchMovies = (query, page = 1) => {\r\n  return instance.get(\"/search/movie\", {\r\n    params: { query, page },\r\n  });\r\n};\r\n\r\nexport const getMovieDetails = (movieId) => {\r\n  return instance.get(`/movie/${movieId}`);\r\n};\r\nexport const getMovieCredits = (movieId) => {\r\n  return instance.get(`/movie/${movieId}/credits`);\r\n};\r\nexport const getMovieReviews = (movieId) => {\r\n  return instance.get(`/movie/${movieId}/reviews`);\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getMovieReviews } from \"../../api/postmovie\";\r\n// import SingleMovies from \"../../components/SingleMovies/SingleMovies\";\r\n\r\nconst Reviews = () => {\r\n  const { movieId } = useParams();\r\n\r\n  const [reviews, setReviews] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchReviews = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const { data } = await getMovieReviews(movieId);\r\n\r\n        setReviews(data.results);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchReviews();\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <h2>Reviews</h2>\r\n\r\n        {loading && <p>Loading...</p>}\r\n        {error && <p>Error: {error}</p>}\r\n        {reviews && reviews.length === 0 ? (\r\n          <p>We don't have any reviews for this movie</p>\r\n        ) : (\r\n          <ul>\r\n            {reviews &&\r\n              reviews.map((review) => (\r\n                <li key={review.id}>\r\n                  <h2>Author: {review.author}</h2>\r\n                  <p>{review.content}</p>\r\n                </li>\r\n              ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n"],"names":["instance","axios","create","baseURL","params","api_key","language","getTrendingMovies","get","searchMovies","query","page","arguments","length","undefined","getMovieDetails","movieId","concat","getMovieCredits","getMovieReviews","Reviews","useParams","reviews","setReviews","useState","loading","setLoading","error","setError","useEffect","async","data","results","message","fetchReviews","_jsx","_Fragment","children","_jsxs","map","review","author","content","id"],"sourceRoot":""}