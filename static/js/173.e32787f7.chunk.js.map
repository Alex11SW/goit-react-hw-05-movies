{"version":3,"file":"static/js/173.e32787f7.chunk.js","mappings":"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","sources":["api/postmovie.js","pages/Movies/movies.module.css","webpack://goit-react-hw-05-movies/./src/components/Button/button.module.css?6dda","components/Button/Button.jsx","components/MovieList/MovieLest.jsx","components/Movie/Movie.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_KEY = \"7fa1de4f202d6fd853924ceed0b441bf\";\r\nconst BASE_URL = \"https://api.themoviedb.org/3\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: BASE_URL,\r\n  params: {\r\n    api_key: API_KEY,\r\n    language: \"en-US\",\r\n  },\r\n});\r\n\r\nexport const getTrendingMovies = () => {\r\n  return instance.get(\"/trending/movie/day\");\r\n};\r\n\r\nexport const searchMovies = (query, page = 1) => {\r\n  return instance.get(\"/search/movie\", {\r\n    params: { query, page },\r\n  });\r\n};\r\n\r\nexport const getMovieDetails = (movieId) => {\r\n  return instance.get(`/movie/${movieId}`);\r\n};\r\nexport const getMovieCredits = (movieId) => {\r\n  return instance.get(`/movie/${movieId}/credits`);\r\n};\r\nexport const getMovieReviews = (movieId) => {\r\n  return instance.get(`/movie/${movieId}/reviews`);\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"Button\":\"button_Button__9VGj+\"};","import styles from \"./button.module.css\";\r\n\r\nconst Button = ({ onClick = () => {}, type = \"submit\", children }) => {\r\n  return (\r\n    <button onClick={onClick} className={styles.Button}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nconst MovieList = ({ movies }) => {\r\n  const location = useLocation();\r\n  return (\r\n    <ul>\r\n      {movies.map((movie) => (\r\n        <li key={movie.id}>\r\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\r\n            {movie.title}\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { searchMovies } from \"../../api/postmovie.js\";\r\nimport Button from \"../Button/Button.jsx\";\r\nimport MovieList from \"../MovieList/MovieLest.jsx\";\r\n\r\nconst Movie = () => {\r\n  // const [search, setSearch] = useState(\"\");\r\n  const [movies, setMovies] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const search = searchParams.get(\"search\");\r\n\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const { data } = await searchMovies(search, currentPage);\r\n        setMovies(data.results);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (search) {\r\n      fetchMovies();\r\n    } else {\r\n      setMovies([]);\r\n    }\r\n  }, [search, currentPage]);\r\n\r\n  const handleSearch = (searchQuery) => {\r\n    setSearchParams({ search: searchQuery });\r\n    // setSearch(searchQuery);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handleLoadMore = () => {\r\n    setCurrentPage((prevPage) => prevPage + 1);\r\n  };\r\n\r\n  const isMovies = Boolean(movies.length);\r\n  const shouldRenderLoadMore = isMovies && !loading && !error;\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={(e) => e.preventDefault()}>\r\n        <input\r\n          type=\"text\"\r\n          value={search}\r\n          onChange={(e) => handleSearch(e.target.value)}\r\n          placeholder=\"Search movies...\"\r\n        />\r\n        <Button type=\"submit\">Search</Button>\r\n      </form>\r\n      {error && <p>{error}</p>}\r\n      {loading && <p>Loading...</p>}\r\n      {isMovies && <MovieList movies={movies} />}\r\n      {shouldRenderLoadMore && (\r\n        <Button onClick={handleLoadMore}>Load more</Button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import styles from \"./movies.module.css\";\r\nimport Movie from \"../../components/Movie/Movie\";\r\nconst Movies = () => {\r\n  return (\r\n    <div>\r\n      <h1 className={styles.movies}>Trending today</h1>\r\n      <Movie />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n"],"names":["instance","axios","create","baseURL","params","api_key","language","getTrendingMovies","get","searchMovies","query","page","arguments","length","undefined","getMovieDetails","movieId","concat","getMovieCredits","getMovieReviews","_ref","onClick","type","children","_jsx","className","styles","movies","location","useLocation","map","movie","Link","to","id","state","from","title","Movie","setMovies","useState","loading","setLoading","error","setError","currentPage","setCurrentPage","searchParams","setSearchParams","useSearchParams","search","useEffect","async","data","results","message","fetchMovies","isMovies","Boolean","shouldRenderLoadMore","_jsxs","_Fragment","onSubmit","e","preventDefault","value","onChange","handleSearch","searchQuery","target","placeholder","Button","MovieList","handleLoadMore","prevPage","Movies"],"sourceRoot":""}